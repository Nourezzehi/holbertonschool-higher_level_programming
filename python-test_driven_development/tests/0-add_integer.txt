===============================
        add two integers
===============================

``add_integer()`` returns the sum of its arguments.  For numbers,
that value is equivalent to using the ``+`` operator.

    import:
    >>> add_integer = __import__('0-add_integer').add_integer

::
    add one integer:
    >>> add_integer(8)
    106

::
    add 2 integers:
    >>> add_integer(2, 3)
    5
    

::
    add integer to float:
    >>> add_integer(2.5, 2)
    4

::
    add float to integer:
    >>> add_integer(2, 2.5)
    4
::
    add integer to a string
    >>> add_integer("hello", 2)
    Traceback (most recent call last):
    File "<stdin>", line 1, in <module>
    File "/home/nour-ezzehi/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 9, in add_integer
    raise TypeError("a must be an integer")
    TypeError: a must be an integer
::
    add nothing:
    >>> add_integer()
    Traceback (most recent call last):
    File "<stdin>", line 1, in <module>
    TypeError: add_integer() missing 1 required positional argument: 'a'

::
    >>> add_integer(true, 1)
    Traceback (most recent call last):
    File "<stdin>", line 1, in <module>
    NameError: name 'true' is not defined. Did you mean: 'True'?
::
    add integer to integer:
    >>> False + 2
    3
